{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comment/comment-card/comment-card.component.html","webpack:///./src/app/comment/comment-card/comment-card.component.scss","webpack:///./src/app/comment/comment-card/comment-card.component.ts","webpack:///./src/app/comment/comment-post/comment-creation.ts","webpack:///./src/app/comment/comment-post/comment-post.component.html","webpack:///./src/app/comment/comment-post/comment-post.component.scss","webpack:///./src/app/comment/comment-post/comment-post.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/project/project-card/project-card.component.html","webpack:///./src/app/project/project-card/project-card.component.scss","webpack:///./src/app/project/project-card/project-card.component.ts","webpack:///./src/app/project/project-detail/project-detail.component.html","webpack:///./src/app/project/project-detail/project-detail.component.scss","webpack:///./src/app/project/project-detail/project-detail.component.ts","webpack:///./src/app/project/project-list/project-list.component.html","webpack:///./src/app/project/project-list/project-list.component.scss","webpack:///./src/app/project/project-list/project-list.component.ts","webpack:///./src/app/project/project-post/project-post.component.html","webpack:///./src/app/project/project-post/project-post.component.scss","webpack:///./src/app/project/project-post/project-post.component.ts","webpack:///./src/app/project/project-search/project-creation.ts","webpack:///./src/app/project/project-search/project-search.component.html","webpack:///./src/app/project/project-search/project-search.component.scss","webpack:///./src/app/project/project-search/project-search.component.ts","webpack:///./src/app/shared/auth.service.ts","webpack:///./src/app/shared/project.service.ts","webpack:///./src/app/shared/sort-order.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/user-card/user-card.component.html","webpack:///./src/app/user/user-card/user-card.component.scss","webpack:///./src/app/user/user-card/user-card.component.ts","webpack:///./src/app/user/user-list/user-list.component.html","webpack:///./src/app/user/user-list/user-list.component.scss","webpack:///./src/app/user/user-list/user-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container-fluid max-width-wrapper page-content\\\" >\\n  <app-header [headerText]=\\\"'About sudoCode'\\\"></app-header>\\n    <div class=\\\"m-auto\\\">\\n      <img src=\\\"https://i.stack.imgur.com/eQ20E.jpg\\\">\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProjectListComponent} from './project/project-list/project-list.component';\nimport {ProjectPostComponent} from './project/project-post/project-post.component';\nimport {AboutComponent} from './about/about.component';\nimport {ProjectDetailComponent} from './project/project-detail/project-detail.component';\nimport {UserListComponent} from './user/user-list/user-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'projects',\n    pathMatch: 'full'\n  },\n  {\n    path: 'projects',\n    component: ProjectListComponent,\n    data: {title: 'Projects'}\n  },\n  {\n    path: 'projects/post',\n    component: ProjectPostComponent,\n    data: {title: 'New Project'}\n  },\n  {\n    path: 'projects/:id',\n    component: ProjectDetailComponent,\n    data: {title: 'Project Details'}\n  },\n  {\n    path: 'users',\n    component: UserListComponent,\n    data: {title: 'Users'}\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n    data: {title: 'About'}\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div id=\\\"webpage\\\">\\n<app-navbar></app-navbar>\\n\\n  <div id=\\\"content\\\">\\n    <div id=\\\"sub-content\\\" class=\\\"max-width-wrapper container align-self-auto\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  </div>\\n  <app-footer></app-footer>\\n</div>\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {filter, map, mergeMap} from 'rxjs/operators';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {Title} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend';\n\n  constructor(private route: Router, private titleService: Title, private activatedRoute: ActivatedRoute) {\n\n  }\n\n\n  ngOnInit(): void {\n    this.route.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      map(() => this.activatedRoute),\n      map(route => {\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n        return route;\n      }),\n      filter(route => route.outlet === 'primary'),\n      mergeMap(route => route.data)).subscribe(\n      event => this.titleService.setTitle(event['title'] + ' - sudoCode')\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {Injectable, NgModule} from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport { ProjectListComponent } from './project/project-list/project-list.component';\nimport { ProjectCardComponent } from './project/project-card/project-card.component';\nimport { ProjectPostComponent } from './project/project-post/project-post.component';\nimport { ProjectSearchComponent } from './project/project-search/project-search.component';\nimport { HeaderComponent } from './header/header.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {ProjectService} from './shared/project.service';\nimport { AboutComponent } from './about/about.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ProjectDetailComponent } from './project/project-detail/project-detail.component';\nimport { CommentPostComponent } from './comment/comment-post/comment-post.component';\nimport { CommentCardComponent } from './comment/comment-card/comment-card.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserCardComponent } from './user/user-card/user-card.component';\nimport {UserService} from './shared/user.service';\n\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProjectListComponent,\n    ProjectCardComponent,\n    ProjectPostComponent,\n    ProjectSearchComponent,\n    HeaderComponent,\n    AboutComponent,\n    FooterComponent,\n    ProjectDetailComponent,\n    CommentPostComponent,\n    CommentCardComponent,\n    UserListComponent,\n    UserCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [\n    ProjectService, {provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true },\n    UserService, {provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"comment-card container-fluid\\\" style=\\\"margin-bottom: 1.2rem\\\">\\n  <div *ngIf=\\\"auth.currentUser?.id == comment?.author?.id\\\"\\n       class=\\\"author-buttons btn-group-sm\\\">\\n    <button id=\\\"edit\\\" class=\\\"btn btn-sm btn-outline-secondary\\\">\\n      <i class=\\\"fa fa-pencil\\\"></i> Edit\\n    </button>\\n    <button id=\\\"delete\\\" class=\\\"btn btn-sm btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#confirm-delete\\\">\\n      <i class=\\\"fa fa-trash-o\\\"></i> Delete\\n    </button>\\n\\n    <div class=\\\"modal fade\\\" id=\\\"confirm-delete\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Are you sure?</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              This cannot be undone.\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteComment()\\\" data-dismiss=\\\"modal\\\">Delete Comment</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n  </div>\\n  <div class=\\\"header\\\">\\n    <img class=\\\"avatar\\\" src=\\\"{{comment?.author?.avatar_url}}\\\">\\n    <div class=\\\"metadata\\\">\\n      <a class=\\\"clickable login\\\" href=\\\"https://github.com/{{comment?.author?.login}}\\\">\\n        <h6>{{comment?.author?.login}}</h6>\\n      </a>\\n      <div class=\\\"date\\\">{{comment?.date_posted | date: 'MMM. d, y'}}</div>\\n    </div>\\n  </div>\\n  <p class=\\\"comment-body\\\">{{comment?.body}}</p>\\n</div>\\n<hr class=\\\"my-2\\\">\\n\"","module.exports = \".comment-card {\\n  margin-top: 1rem;\\n  padding-top: 1rem;\\n  padding-bottom: 1rem; }\\n  .comment-card .author-buttons {\\n    float: right; }\\n  .comment-card .author-buttons #delete {\\n      margin-left: .5rem; }\\n  .comment-card .header {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: min-content auto;\\n        grid-template-columns: -webkit-min-content auto;\\n        grid-template-columns: min-content auto; }\\n  .comment-card .header .avatar {\\n      max-height: 50px;\\n      max-width: 50px;\\n      box-shadow: 0 3px .3rem black;\\n      border-radius: 50px; }\\n  .comment-card .header .metadata {\\n      display: -ms-grid;\\n      display: grid;\\n      -ms-grid-rows: (auto)[2];\\n          grid-template-rows: repeat(2, auto); }\\n  .comment-card .header .metadata .login {\\n        margin-left: 1rem;\\n        font-size: 1rem;\\n        margin-bottom: 0; }\\n  .comment-card .header .metadata .date {\\n        font-family: \\\"Valera Round\\\", sans-serif;\\n        color: gray;\\n        font-size: .9rem;\\n        margin-left: 1rem;\\n        margin-top: 0; }\\n  .comment-card .comment-body {\\n    margin-top: 1rem;\\n    white-space: pre-wrap;\\n    font-family: \\\"Valera Round\\\", sans-serif;\\n    font-size: .95rem;\\n    padding-bottom: 0;\\n    margin-bottom: 0; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {IComment} from '../../shared/IComment';\nimport {AuthService} from '../../shared/auth.service';\nimport {ProjectService} from '../../shared/project.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-comment-card',\n  templateUrl: './comment-card.component.html',\n  styleUrls: ['./comment-card.component.scss']\n})\nexport class CommentCardComponent implements OnInit {\n\n  @Input() comment: IComment;\n  private projectId: number;\n\n  constructor(protected auth: AuthService,\n              private projectService: ProjectService,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.projectId = params.id,\n      err => console.log(err)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  protected deleteComment(): void {\n    this.projectService.deleteComment(this.projectId, this.comment.id)\n      .subscribe(\n        () => {},\n        err => console.log(err)\n      );\n  }\n}\n","export class CommentCreation {\n\n  constructor(public body: string) {}\n}\n","module.exports = \"<form  (ngSubmit)=\\\"submit()\\\" #commentForm=\\\"ngForm\\\" >\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"comment-body\\\">\\n      <span *ngIf=\\\"auth.authenticated\\\">Post comment</span>\\n      <span *ngIf=\\\"!auth.authenticated\\\">\\n        <a class=\\\"clickable\\\" href=\\\"http://localhost:8080/oauth2/authorization/github\\\">Log in to post a comment</a></span>\\n    </label>\\n    <textarea [disabled]=\\\"!auth.authenticated\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment-body\\\"\\n              required minlength=\\\"3\\\" rows=\\\"3\\\" maxlength=\\\"255\\\"\\n    [(ngModel)]=\\\"comment.body\\\" name=\\\"body\\\"></textarea>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm clickable\\\"\\n            [disabled]=\\\"!commentForm.form.valid\\\">Post</button>\\n\\n  </div>\\n</form>\\n\\n\"","module.exports = \"\"","import { IComment } from './../../shared/IComment';\nimport { Component, OnInit } from '@angular/core';\nimport {CommentCreation} from './comment-creation';\nimport {AuthService} from '../../shared/auth.service';\nimport {ProjectService} from '../../shared/project.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-comment-post',\n  templateUrl: './comment-post.component.html',\n  styleUrls: ['./comment-post.component.scss']\n})\nexport class CommentPostComponent implements OnInit {\n\n  protected comment: CommentCreation;\n  protected submitted = false;\n  private projectId: number;\n\n  constructor(protected auth: AuthService,\n              private projectService: ProjectService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.comment = new CommentCreation('');\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      params => this.projectId = params.id,\n      err => console.log(err)\n    );\n  }\n\n  public submit() {\n    let submittedComment: IComment;\n\n    this.projectService.postComment(this.projectId, this.comment)\n      .subscribe(\n        data => submittedComment = data,\n        err => console.log(err)\n    );\n\n    if (submittedComment) {\n      this.submitted = true;\n    }\n\n\n    this.router.navigate(['projects', this.projectId]).then(() => {});\n  }\n\n  get diagnostic(): string {\n    return JSON.stringify(this.comment);\n  }\n}\n","module.exports = \"<footer>\\n  <div class=\\\"max-width-wrapper container\\\">\\n    <div id=\\\"footer-content\\\" class=\\\"container\\\" style=\\\"min-height: 5rem\\\">\\n      This site was created using Spring Boot & Angular 6\\n    </div>\\n  </div>\\n</footer>\\n\"","module.exports = \"footer {\\n  background-color: #1c2331;\\n  position: static;\\n  bottom: 0;\\n  width: 100%;\\n  height: 200px; }\\n  footer .max-width-wrapper {\\n    color: #fffbfe; }\\n  footer .max-width-wrapper #footer-content {\\n      padding-top: 1rem;\\n      font-family: \\\"Valera Round\\\", sans-serif;\\n      font-size: 1rem; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div id=\\\"header\\\">\\n  <h2>{{headerText}}</h2>\\n  <hr>\\n</div>\\n\"","module.exports = \"#header {\\n  margin-bottom: 3rem;\\n  padding-top: 5rem; }\\n  #header h2 {\\n    font-family: Montserrat, sans-serif;\\n    font-weight: 600; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() headerText: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark\\\">\\n  <div id=\\\"inner-nav\\\" class=\\\"container max-width-wrapper\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">(sudoCode);</a>\\n    <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mainNav\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"mainNav\\\">\\n      <div class=\\\"navbar-expand\\\">\\n        <div class=\\\"navbar-nav\\\">\\n          <a class=\\\"nav-item nav-link\\\" routerLinkActive=\\\"active\\\"\\n             [routerLinkActiveOptions]=\\\"{exact: true}\\\" routerLink=\\\"/\\\">Home</a>\\n          <a class=\\\"nav-item nav-link\\\" routerLinkActive=\\\"active\\\"\\n             routerLink=\\\"projects\\\">Projects</a>\\n          <a class=\\\"nav-item nav-link\\\" routerLinkActive=\\\"active\\\"\\n             routerLink=\\\"users\\\">Users</a>\\n          <a class=\\\"nav-item nav-link\\\" routerLinkActive=\\\"active\\\"\\n             routerLink=\\\"#\\\">Contact</a>\\n          <a class=\\\"nav-item nav-link\\\" routerLinkActive=\\\"active\\\"\\n             routerLink=\\\"about\\\">About</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"mavbar-expand ml-auto\\\">\\n      <div class=\\\"navbar-nav\\\" *ngIf=\\\"!auth.authenticated\\\">\\n        <a class=\\\"nav-item nav-link\\\" href=\\\"http://localhost:8080/oauth2/authorization/github\\\">\\n          <i class=\\\"fa fa-github fa-lg\\\"></i> <span> Login</span>\\n        </a>\\n      </div>\\n      <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"auth.authenticated\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n           aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"login\\\">{{auth.currentUser?.login}} </span>\\n          <img src=\\\"{{auth.currentUser?.avatar_url}}\\\" style=\\\"max-width: 40px; border-radius: 50px; padding: 0; margin: 0\\\">\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"auth.logout()\\\" style=\\\"cursor: pointer\\\">Logout</a>\\n        </div>\\n      </li>\\n    </div>\\n  </div>\\n</nav>\\n\"","module.exports = \".navbar {\\n  background-color: #1c2331 !important;\\n  font-size: .9rem;\\n  font-family: Montserrat, sans-serif;\\n  min-height: 56px;\\n  padding-bottom: 0;\\n  padding-top: 0;\\n  box-sizing: border-box;\\n  box-shadow: 0 5px 21px -11px rgba(31, 31, 33, 0.62);\\n  border-top: 4px solid #639fab; }\\n  .navbar .navbar-brand {\\n    font-size: 1.5rem;\\n    font-weight: 700; }\\n  .navbar .container {\\n    width: 88vw;\\n    min-height: 80px; }\\n  .navbar .container .nav-link {\\n      text-transform: uppercase;\\n      font-size: .9rem;\\n      font-weight: 700;\\n      letter-spacing: 0;\\n      cursor: pointer;\\n      color: rgba(255, 251, 254, 0.7); }\\n  .navbar .container .nav-link:hover {\\n        color: white; }\\n  .navbar .container .active {\\n      border-bottom: 2px solid #639fab;\\n      color: white; }\\n  .dropdown-toggle::after {\\n  display: none; }\\n  .login {\\n  padding-right: 1rem;\\n  color: #f1f1f1; }\\n  @media screen and (max-width: 700px) {\\n    .login {\\n      display: none; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../shared/auth.service';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, public auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      console.log(params);\n      this.auth.authenticate(undefined);\n    });\n  }\n\n}\n","module.exports = \"<div id=\\\"project-card\\\" class=\\\"container\\\">\\n  <h4><a class=\\\"title\\\" (click)=\\\"getDetails()\\\">{{project?.title}}</a>\\n    <span id=\\\"difficulty\\\" class=\\\"badge font-weight-normal\\\">({{project?.difficulty}})</span>\\n    <span *ngIf=\\\"auth.authenticated && (project?.author === auth?.currentUser)\\\" class=\\\"float-right\\\">\\n      <i class=\\\"fa-trash\\\"></i>\\n    </span>\\n  </h4>\\n  <!--<h6 id=\\\"difficulty\\\">{{project.difficulty}}</h6>-->\\n  <p class=\\\"text-body\\\" id=\\\"description\\\">{{project?.description}}</p>\\n  <hr class=\\\"my-2\\\">\\n  <h6 id=\\\"metadata\\\">\\n      <span class=\\\"user-details\\\">\\n        <img src=\\\"{{project?.author.avatar_url}}\\\" class=\\\"avatar\\\">\\n        {{project?.author.login}}</span>\\n      <span class=\\\"date\\\">{{project?.date_posted | date: 'MMM. d, y'}}</span>\\n  </h6>\\n</div>\\n\"","module.exports = \"#project-card {\\n  border-radius: 5px;\\n  margin-top: 4rem; }\\n  #project-card .title {\\n    color: #1c2331;\\n    font-family: \\\"Montserrat\\\", sans-serif;\\n    font-weight: 500; }\\n  #project-card .title:hover {\\n      color: #639fab;\\n      cursor: pointer; }\\n  #project-card #description {\\n    font-size: 1rem;\\n    margin-left: .5rem;\\n    word-wrap: break-spaces;\\n    white-space: pre-wrap; }\\n  #project-card #metadata {\\n    font-size: .9rem;\\n    padding-top: .5rem;\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: (auto)[2];\\n        grid-template-columns: repeat(2, auto); }\\n  #project-card #metadata .user-details {\\n      -ms-grid-column-align: left;\\n          justify-self: left; }\\n  #project-card #metadata .user-details .avatar {\\n        max-height: 20px;\\n        box-shadow: 0 0 .1rem black;\\n        border-radius: 50px; }\\n  #project-card #metadata .date {\\n      -ms-grid-column-align: right;\\n          justify-self: right; }\\n  #project-card #difficulty {\\n    color: gray;\\n    padding-bottom: 1rem; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {IProject} from '../IProject';\nimport {AuthService} from '../../shared/auth.service';\nimport {IUser} from '../../shared/IUser';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-project-card',\n  templateUrl: './project-card.component.html',\n  styleUrls: ['./project-card.component.scss']\n})\nexport class ProjectCardComponent implements OnInit {\n\n  @Input() project: IProject;\n\n  constructor(protected auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  protected getDetails(): void {\n    this.router.navigateByUrl(`/projects/${this.project.id}`);\n  }\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid max-width-wrapper page-content\\\">\\n  <app-header [headerText]=\\\"'Project Details'\\\"></app-header>\\n  <div class=\\\"container-fluid\\\">\\n    <div id=\\\"project-details\\\" class=\\\"container\\\">\\n      <div id=\\\"details-header\\\">\\n        <span class=\\\"title\\\">{{project?.title}}</span>\\n        <span class=\\\"date\\\">{{project?.date_posted | date: 'MMM. d, y'}}</span>\\n      </div>\\n      <div class=\\\"metadata\\\">\\n        <span class=\\\"difficulty\\\">{{project?.difficulty}}</span>\\n        <span id=\\\"user-info\\\">\\n          <span class=\\\"author-avatar\\\">\\n            <img src=\\\"{{project?.author?.avatar_url}}\\\" alt=\\\"avatar\\\">\\n          </span>\\n          <span class=\\\"author-login\\\">{{project?.author?.login}}</span>\\n        </span>\\n      </div>\\n      <div class=\\\"project-description container\\\">\\n        <p class=\\\"text\\\">{{project?.description}}</p>\\n      </div>\\n      <div class=\\\"author-buttons\\\" *ngIf=\\\"isAuthor()\\\" id=\\\"options\\\">\\n        <button id=\\\"edit\\\" class=\\\"btn btn-sm btn-outline-secondary\\\">\\n          <i class=\\\"fa fa-pencil\\\"></i> Edit\\n        </button>\\n        <button id=\\\"delete\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteProject()\\\">\\n          <i class=\\\"fa fa-trash\\\"></i> Delete</button>\\n      </div>\\n    </div>\\n    <div id=\\\"comments\\\" class=\\\"container\\\">\\n      <div class=\\\"comment-post-form\\\">\\n        <hr class=\\\"my-2\\\">\\n        <app-comment-post></app-comment-post>\\n      </div>\\n      <div class=\\\"comment-list-metadata\\\">\\n        <div class=\\\"result-number\\\">{{comments?.total_elements}} comment(s)</div>\\n        <select class=\\\"sort-order\\\" title=\\\"order\\\">\\n          <option value=\\\"new\\\" (click)=\\\"sortByNewest()\\\">newest</option>\\n          <option value=\\\"old\\\" (click)=\\\"sortByOldest()\\\">oldest</option>\\n        </select>\\n        <ul class=\\\"pagination-sm\\\">\\n          <li [class]=\\\"comments?.first ? 'page-item disabled' : 'page-item'\\\">\\n            <a class=\\\"page-link\\\" (click)=\\\"prevCommentPage()\\\">prev</a>\\n          </li>\\n          <li [class]=\\\"comments?.last ? 'page-item disabled' : 'page-item'\\\">\\n            <a class=\\\"page-link\\\" (click)=\\\"nextCommentPage()\\\">next</a>\\n          </li>\\n        </ul>\\n      </div>\\n        <ul class=\\\"comment-list\\\" [@listStagger]=\\\"comments\\\">\\n          <li *ngFor=\\\"let comment of comments?.content\\\">\\n            <app-comment-card [comment]=\\\"comment\\\"></app-comment-card>\\n          </li>\\n        </ul>\\n    </div>\\n  </div>\\n\\n  <ul class=\\\"pagination-sm d-flex float-right\\\" style=\\\"margin-right: 3rem\\\">\\n    <li [class]=\\\"comments?.first ? 'page-item disabled' : 'page-item'\\\">\\n      <a class=\\\"page-link\\\" (click)=\\\"prevCommentPage()\\\">prev</a>\\n    </li>80px\\n    <li [class]=\\\"comments?.last ? 'page-item disabled' : 'page-item'\\\">\\n      <a class=\\\"page-link\\\" (click)=\\\"nextCommentPage()\\\">next</a>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \"#project-details {\\n  -ms-grid-rows: (auto)[2];\\n      grid-template-rows: repeat(2, auto); }\\n  #project-details #details-header {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: (auto)[2];\\n        grid-template-columns: repeat(2, auto); }\\n  #project-details #details-header .title {\\n      font-family: Montserrat, sans-serif;\\n      font-weight: 500;\\n      font-size: 1.5rem;\\n      margin-bottom: 1rem; }\\n  #project-details #details-header .date {\\n      -ms-grid-column-align: end;\\n          justify-self: end; }\\n  #project-details .metadata {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: (auto)[2];\\n        grid-template-columns: repeat(2, auto); }\\n  #project-details .metadata .difficulty {\\n      font-size: 1rem;\\n      color: gray;\\n      font-family: \\\"Valera Round\\\", sans-serif; }\\n  #project-details .metadata #user-info {\\n      -ms-grid-column-align: end;\\n          justify-self: end; }\\n  #project-details .metadata #user-info .author-avatar img {\\n        max-height: 20px;\\n        max-width: 20px;\\n        border-radius: 50px; }\\n  #project-details .metadata #user-info .author-login {\\n        padding-left: .3rem;\\n        font-size: 1rem; }\\n  #project-details .project-description {\\n    margin-top: 1.5rem;\\n    white-space: pre-wrap; }\\n  #project-details .project-description .text {\\n      font-size: 1rem;\\n      word-wrap: break-word; }\\n  #project-details .author-buttons {\\n    max-width: -webkit-fit-content;\\n    max-width: -moz-fit-content;\\n    max-width: fit-content;\\n    float: right; }\\n  #project-details .author-buttons #delete {\\n      margin-left: .5rem; }\\n  #comments {\\n  font-family: \\\"Valera Round\\\", sans-serif;\\n  font-size: 1rem;\\n  padding-bottom: 5rem; }\\n  #comments .comment-list-metadata {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: (auto)[3];\\n        grid-template-columns: repeat(3, auto); }\\n  #comments .comment-list-metadata .result-amount {\\n      -ms-grid-column-align: start;\\n          justify-self: start; }\\n  #comments .comment-list-metadata .sort-order {\\n      margin: 0;\\n      width: 6rem;\\n      height: 1.3rem;\\n      padding: 0;\\n      -ms-grid-column-align: center;\\n          justify-self: center; }\\n  #comments .comment-list-metadata .pagination-sm {\\n      display: flex;\\n      justify-content: end; }\\n  #comments .comment-post-form {\\n    padding-top: 2rem; }\\n  #comments .comment-list {\\n    list-style-type: none;\\n    padding: 0; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ProjectService} from '../../shared/project.service';\nimport {IProject} from '../IProject';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CommentPage} from '../../shared/comment-page';\nimport {animate, query, stagger, style, transition, trigger} from '@angular/animations';\nimport {SortOrder} from '../../shared/sort-order';\nimport {AuthService} from '../../shared/auth.service';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.scss'],\n  animations: [\n    trigger('listStagger', [\n      transition('* <=> *', [\n        query(\n          ':enter',\n          [\n            style({opacity: 0, transform: 'translateY(-15px)'}),\n            stagger(\n              '50ms',\n              animate(\n                '550ms ease-out',\n                style({opacity: 1, transform: 'translateY(0px)'})\n              )\n            )\n          ],\n          {optional: true}\n        ),\n      ])\n    ])\n  ]\n})\nexport class ProjectDetailComponent implements OnInit {\n\n  protected project: IProject;\n  protected comments: CommentPage;\n  protected projectId: number;\n  protected pageNum: number;\n  private order: SortOrder;\n  protected isAuthenticated: boolean;\n\n  constructor(private projectService: ProjectService,\n              private route: ActivatedRoute,\n              protected auth: AuthService,\n              private router: Router) {\n    this.route.params.subscribe(\n      params => this.projectId = params.id,\n      err => console.log(err)\n    );\n  }\n\n  isAuthor(): boolean {\n    if (this.auth.currentUser == null) { return false; }\n    if (this.project == null) { return false; }\n\n    return this.auth.currentUser.id === this.project.author.id;\n  }\n\n  deleteProject(): void {\n    if (this.isAuthor()) {\n      this.projectService.deleteProject(this.projectId)\n        .subscribe(\n          status => console.log(status),\n          err => console.log(err)\n        );\n\n      this.router.navigate(['projects']).then(() => {});\n    }\n  }\n\n  ngOnInit() {\n    this.pageNum = 0;\n    this.fetchProject();\n    this.sortByNewest();\n  }\n\n  protected sortByOldest(): void {\n    this.order = SortOrder.ASC;\n    this.fetchComments();\n  }\n\n  protected sortByNewest(): void {\n    this.order = SortOrder.DESC;\n    this.fetchComments();\n  }\n\n  private fetchProject(): void {\n    this.projectService.fetchById(this.projectId)\n      .subscribe(\n        data => this.project = data,\n        err => console.log(err)\n      );\n  }\n\n  protected nextCommentPage(): void {\n    if (!this.comments.last) {\n      this.pageNum++;\n      this.fetchComments();\n    }\n  }\n\n  protected prevCommentPage(): void {\n    if (!this.comments.first) {\n      this.pageNum--;\n      this.fetchComments();\n    }\n  }\n\n  private fetchComments(): void {\n    this.projectService.fetchProjectComments(this.projectId, this.order, this.pageNum)\n      .subscribe(\n        data => this.comments = data,\n        err => console.log(err)\n      );\n  }\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid max-width-wrapper page-content\\\" >\\n  <app-header [headerText]=\\\"'Find and share ideas for side projects.'\\\"></app-header>\\n  <div class=\\\"container-fluid\\\">\\n    <app-project-search></app-project-search>\\n\\n    <ul class=\\\"project-list\\\" *ngIf=\\\"projectPage\\\" [@listStagger]=\\\"projectPage\\\">\\n      <div class=\\\"list-info container\\\">\\n        <h6 class=\\\"result-amount\\\">{{projectPage?.total_elements}} project(s)</h6>\\n        <button id=\\\"post-new\\\" [disabled]=\\\"!auth.authenticated\\\"\\n                class=\\\"post-button btn btn-primary btn-sm\\\"\\n                (click)=\\\"postForm()\\\">\\n          New\\n        </button>\\n        <h6>\\n          <select id=\\\"order-select\\\" title=\\\"order\\\">\\n            <option value=\\\"new\\\" (click)=\\\"ngOnInit()\\\">newest</option>\\n            <option value=\\\"old\\\" (click)=\\\"sortByOldest()\\\">oldest</option>\\n          </select>\\n        </h6>\\n        <ul class=\\\"pagination-sm\\\">\\n          <li [class]=\\\"projectPage?.first ? 'page-item disabled' : 'page-item'\\\">\\n            <a class=\\\"page-link\\\" (click)=\\\"previousPage()\\\">prev</a>\\n          </li>\\n          <li [class]=\\\"projectPage?.last ? 'page-item disabled' : 'page-item'\\\">\\n            <a class=\\\"page-link\\\" (click)=\\\"nextPage()\\\">next</a>\\n          </li>\\n        </ul>\\n      </div>\\n      <li *ngFor=\\\"let project of projectPage?.content\\\">\\n        <app-project-card [project]=\\\"project\\\"></app-project-card>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".page-content .container-fluid {\\n  display: -ms-grid;\\n  display: grid; }\\n  @media screen and (min-width: 850px) {\\n    .page-content .container-fluid {\\n      -ms-grid-columns: 30% auto;\\n          grid-template-columns: 30% auto; } }\\n  @media screen and (max-width: 850px) {\\n    .page-content .container-fluid app-project-search {\\n      display: none; } }\\n  .page-content .container-fluid .list-info {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: (auto)[4];\\n        grid-template-columns: repeat(4, auto);\\n    margin-bottom: 1rem; }\\n  .page-content .container-fluid .list-info select {\\n      margin: 0;\\n      width: 6rem;\\n      height: 1.3rem;\\n      padding: 0;\\n      -ms-grid-column-align: left;\\n          justify-self: left; }\\n  .page-content .container-fluid .list-info .result-amount {\\n      -ms-grid-column-align: start;\\n          justify-self: start; }\\n  .page-content .container-fluid .list-info .post-button {\\n      display: flex;\\n      justify-self: center; }\\n  .page-content .container-fluid .list-info .pagination-sm {\\n      display: flex;\\n      justify-content: end; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PROJECTS} from './mock-projects';\nimport {animate, query, stagger, style, transition, trigger} from '@angular/animations';\nimport {ProjectPage} from '../../shared/project-page';\nimport {ProjectService} from '../../shared/project.service';\nimport {ProjectCreation} from '../project-search/project-creation';\nimport {AuthService} from '../../shared/auth.service';\nimport {Router} from '@angular/router';\nimport {SortOrder} from '../../shared/sort-order';\n\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss'],\n  animations: [\n    trigger('listStagger', [\n      transition('* <=> *', [\n        query(\n          ':enter',\n          [\n            style({opacity: 0, transform: 'translateY(-15px)'}),\n            stagger(\n              '50ms',\n              animate(\n                '550ms ease-out',\n                style({opacity: 1, transform: 'translateY(0px)'})\n              )\n            )\n          ],\n          {optional: true}\n        ),\n      ])\n    ])\n  ]\n})\nexport class ProjectListComponent implements OnInit {\n\n  constructor(private projectService: ProjectService, protected auth: AuthService, private router: Router) {}\n\n  projectPage: ProjectPage;\n  public page: number;\n\n  private order: SortOrder;\n  private filteredQuery: ProjectCreation;\n\n  ngOnInit() {\n    this.order = SortOrder.DESC;\n    this.page = 0;\n\n    this.fetchAll(this.page, this.order);\n\n    if (this.projectPage) {\n      this.page = this.projectPage.number;\n    }\n  }\n\n  /**\n   * Returns a ProjectPage of all projects in the backend DB with no filtering\n   * other than the required page & order.\n   * @param page Page number. Starts at 0.\n   * @param order Order of the projects. Must be a SortOrder enum.\n   */\n  fetchAll(page: number, order: string): void {\n    this.projectService.fetchAll(page, order)\n      .subscribe(\n        data => this.projectPage = data,\n        error => console.log(error)\n      );\n  }\n\n  nextPage(): void {\n    this.projectService.fetchAll(++this.projectPage.number, this.order)\n      .subscribe(\n        data => this.projectPage = data,\n        error => console.log(error)\n      );\n  }\n\n  previousPage(): void {\n    this.projectService.fetchAll(--this.projectPage.number, this.order)\n      .subscribe(\n        data => this.projectPage = data,\n        err => console.log(err)\n      );\n  }\n\n  filterByExample(page: number, example: ProjectCreation): void {\n    if (this.filteredQuery !== example && example != null) {\n      this.filteredQuery = example;\n    }\n\n    this.projectService.searchProjects(page, this.order, example)\n      .subscribe(\n        data => this.projectPage = data,\n        err => console.log(err)\n      );\n  }\n\n  postForm()  {\n    this.router.navigate(['projects', 'post'])\n      .then(() => {});\n  }\n\n  sortByOldest(): void {\n    this.order = SortOrder.ASC;\n      this.projectService.fetchAll(0, this.order)\n        .subscribe(\n          data => this.projectPage = data,\n          err => console.log(err)\n        );\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid max-width-wrapper page-content\\\">\\n  <app-header [headerText]=\\\"'Post new project idea'\\\"></app-header>\\n\\n  <form (ngSubmit)=\\\"submit()\\\" #projectForm=\\\"ngForm\\\">\\n    {{diagnostic}}\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Title</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\"\\n               required minlength=\\\"5\\\" maxlength=\\\"30\\\"\\n               [(ngModel)]=\\\"model.title\\\" name=\\\"title\\\"\\n               #title=\\\"ngModel\\\">\\n        <div [hidden]=\\\"title.valid || title.pristine\\\"\\n             class=\\\"alert alert-danger\\\">Title must be 5-30 characters long.</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"difficulty\\\">Difficulty</label>\\n        <select class=\\\"form-control\\\" id=\\\"difficulty\\\" required\\n                [(ngModel)]=\\\"model.difficulty\\\" name=\\\"difficulty\\\">\\n          <option *ngFor=\\\"let diff of difficulty\\\" [value]=\\\"diff\\\">{{diff}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\">Description</label>\\n        <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\"\\n                  required minlength=\\\"8\\\"\\n                  [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\"\\n                  #description=\\\"ngModel\\\" rows=\\\"3\\\"></textarea>\\n        <div [hidden]=\\\"description.valid || description.pristine\\\"\\n             class=\\\"alert alert-danger\\\">Description must be at least 8 characters long.</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary clickable\\\"\\n                [disabled]=\\\"!projectForm.form.valid\\\">submit</button>\\n      </div>\\n  </form>\\n</div>\\n\"","module.exports = \"form {\\n  max-width: 600px;\\n  margin: auto; }\\n  form .ng-valid[required], form .ng-valid.required {\\n    border-left: 5px solid green; }\\n  form .ng-invalid:not(form) {\\n    border-left: 5px solid darkred; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ProjectCreation} from '../project-search/project-creation';\nimport {ProjectService} from '../../shared/project.service';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-project-post',\n  templateUrl: './project-post.component.html',\n  styleUrls: ['./project-post.component.scss']\n})\nexport class ProjectPostComponent {\n\n  difficulty = [\n    'basic',\n    'beginner',\n    'intermediate',\n    'advanced',\n    'expert'\n  ];\n\n  model = new ProjectCreation('', '', '');\n  submitted = false;\n\n  constructor(private projectService: ProjectService, private router: Router) { }\n\n  protected submit(): void {\n    this.submitted = true;\n    this.projectService.post(this.model)\n      .subscribe(\n        status => console.log(status),\n          err => console.log(err)\n      );\n\n    this.router.navigateByUrl('/projects').then(() => {});\n  }\n\n  get diagnostic(): string {\n    return JSON.stringify(this.model);\n  }\n\n\n\n}\n","/**\n * A class for a project without ID and User fields.\n *\n * Suitable as a project post-form as well as a model for filtering via REST calls.\n */\nexport class ProjectCreation {\n\n  constructor(\n    public title: string,\n    public difficulty: string,\n    public description: string) {}\n}\n","module.exports = \"<div class=\\\"container translucent-form-overlay\\\">\\n  <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"filterProjects()\\\" #searchForm=\\\"ngForm\\\">\\n    <h5>Filter Projects</h5>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\" class=\\\"col-form-label\\\">Title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control input-elevated\\\" placeholder=\\\"Title contains...\\\" id=\\\"title\\\"\\n             [(ngModel)]=\\\"searchedQuery.title\\\" name=\\\"title\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\" class=\\\"col-form-label\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" name=\\\"difficulty\\\" id=\\\"difficulty\\\"\\n              [(ngModel)]=\\\"searchedQuery.difficulty\\\">\\n        <option value='' selected>All</option>\\n        <option *ngFor=\\\"let diff of difficulty\\\" [value]=\\\"diff\\\">{{diff}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\" class=\\\"col-form-label\\\">Description</label>\\n      <textarea type=\\\"text\\\" class=\\\"form-control input-elevated\\\" placeholder=\\\"Description\\\" id=\\\"description\\\"\\n                [(ngModel)]=\\\"searchedQuery.description\\\" name=\\\"description\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary clickable\\\">\\n      Filter\\n    </button>\\n  </form>\\n</div>\\n\"","module.exports = \".translucent-form-overlay {\\n  max-width: 300px;\\n  position: relative;\\n  border-top: #1c2331 5px solid;\\n  padding: 1em 1em 1em;\\n  margin-right: 5rem; }\\n  @media screen and (max-width: 850px) {\\n    .translucent-form-overlay {\\n      display: none; } }\\n  .translucent-form-overlay .columns.row {\\n    display: -ms-inline-grid;\\n    display: inline-grid; }\\n  .translucent-form-overlay h4, .translucent-form-overlay label {\\n    color: #1c2331; }\\n  .translucent-form-overlay input, .translucent-form-overlay select {\\n    color: gray;\\n    background-color: white;\\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08); }\\n  .translucent-form-overlay select {\\n    background-position: right; }\\n  .translucent-form-overlay input::-webkit-input-placeholder {\\n    color: gray; }\\n  .translucent-form-overlay input:-ms-input-placeholder {\\n    color: gray; }\\n  .translucent-form-overlay input::-ms-input-placeholder {\\n    color: gray; }\\n  .translucent-form-overlay input::placeholder {\\n    color: gray; }\\n  .translucent-form-overlay .input-elevated {\\n    line-height: 1.5;\\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\n    border-radius: 5px; }\\n  label {\\n  font-size: 1rem !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ProjectCreation} from './project-creation';\nimport {ProjectListComponent} from '../project-list/project-list.component';\n\n@Component({\n  selector: 'app-project-search',\n  templateUrl: './project-search.component.html',\n  styleUrls: ['./project-search.component.scss']\n})\nexport class ProjectSearchComponent {\n\n  difficulty = [\n    'basic',\n    'beginner',\n    'intermediate',\n    'advanced',\n    'expert'\n  ];\n\n  searchedQuery = new ProjectCreation('', '', '');\n\n  constructor(private list: ProjectListComponent) { }\n\n  get diagnostic() {\n    return JSON.stringify(this.searchedQuery);\n  }\n\n  filterProjects(): void {\n    this.list.filterByExample(0, this.searchedQuery);\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {IUser} from './IUser';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public authenticated = false;\n  public currentUser: IUser;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public authenticate(callback) {\n    this.http.get<any>('/api/users/me')\n      .subscribe(data => {\n        this.authenticated = JSON.stringify(data).includes('login');\n\n        if (this.authenticated) {\n          this.currentUser = data;\n        }\n\n        return callback && callback();\n      });\n\n  }\n\n  public logout(): void {\n    this.currentUser = null;\n    this.authenticated = false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {IProject} from '../project/IProject';\nimport {HttpClient} from '@angular/common/http';\nimport {ProjectPage} from './project-page';\nimport {ProjectCreation} from '../project/project-search/project-creation';\nimport {CommentPage} from './comment-page';\nimport {CommentCreation} from '../comment/comment-post/comment-creation';\nimport {IComment} from './IComment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  private URL = '/api/projects';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Returns a ProjectPage of all projects in the backend DB with no filtering other than the required page & order.\n   * @param page Page number. Starts at 0.\n   * @param sortOrder Order of the projects. Must either be 'desc' or 'asc'.\n   */\n  public fetchAll(page: number, sortOrder: string): Observable<ProjectPage> {\n    return this.http.get<ProjectPage>(\n      `${this.URL}?page=${page}&sort=datePosted,${sortOrder}`\n    );\n  }\n\n  public fetchById(id: number): Observable<IProject> {\n    return this.http.get<IProject>(\n      `${this.URL}/${id}`\n    );\n  }\n\n  public post(project: ProjectCreation): Observable<IProject> {\n    return this.http.post<IProject>(this.URL, project);\n  }\n\n  public postComment(projectId: number, comment: CommentCreation): Observable<IComment> {\n    return this.http.post<IComment>(\n      `${this.URL}/${projectId}/comments`, comment\n    );\n  }\n\n  public fetchProjectComments(projectId: number, sortOrder: string, pageNum: number): Observable<CommentPage> {\n    return this.http.get<CommentPage>(\n      `${this.URL}/${projectId}/comments?page=${pageNum}&sort=datePosted,${sortOrder}`\n    );\n  }\n\n  public deleteComment(projectId: number, commentId: number): Observable<void> {\n    return this.http.delete<void>(\n      `${this.URL}/${projectId}/comments/${commentId}`\n    );\n  }\n\n  public deleteProject(projectId: number): Observable<void> {\n    return this.http.delete<void>(`${this.URL}/${projectId}`);\n  }\n\n  public editComment(comment: IComment) {\n    // todo\n  }\n\n\n  // TODO remove the hardcoded sort\n  public searchProjects(page: number, sortOrder: string, values: ProjectCreation): Observable<ProjectPage> {\n    return this.http.get<ProjectPage>(\n      this.URL\n      + `?title=${values.title}`\n      + `&difficulty=${values.difficulty}`\n      + `&description=${values.description}`\n      + `&page=${page}`\n      + `&sort=datePosted,${sortOrder}`\n    );\n  }\n}\n","export enum SortOrder {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IUser} from './IUser';\nimport {UserPage} from './user-page';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private URL = '/api/users';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public fetchById(id: number): Observable<IUser> {\n    return this.http.get<IUser>(\n      `${this.URL}/${id}`\n    );\n  }\n\n  public fetchAll(page: number, sortOrder: string): Observable<UserPage> {\n    return this.http.get<UserPage>(\n      `${this.URL}?page=${page}&sort=${sortOrder}`\n    );\n  }\n\n}\n","module.exports = \"<div id=\\\"user-card\\\">\\n  <div id=\\\"user-info\\\">\\n    <img class=\\\"avatar\\\" src=\\\"{{user?.avatar_url}}\\\">\\n    <div class=\\\"metadata\\\">\\n      <div class=\\\"login\\\">{{user?.login}}</div>\\n      <div *ngIf=\\\"user?.hireable\\\" class=\\\"hireable\\\">Looking for work</div>\\n      <div id=\\\"user-icon-links\\\">\\n      <a class=\\\"github-url\\\" href=\\\"https://github.com/{{user?.login}}\\\">\\n        <i class=\\\"fa fa-github fa-2x\\\"></i></a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"#user-card {\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  -ms-grid-column-align: center;\\n      justify-self: center;\\n  margin-bottom: 3rem; }\\n  #user-card #user-info {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: min-content auto;\\n        grid-template-columns: -webkit-min-content auto;\\n        grid-template-columns: min-content auto; }\\n  #user-card #user-info .avatar {\\n      max-height: 75px;\\n      max-width: 75px;\\n      border-radius: 50px;\\n      box-shadow: 0 3px .3rem black; }\\n  #user-card #user-info .metadata {\\n      display: -ms-grid;\\n      display: grid;\\n      font-size: 1rem;\\n      margin-left: 1rem;\\n      -ms-grid-rows: (min-content)[3];\\n          grid-template-rows: repeat(3, -webkit-min-content);\\n          grid-template-rows: repeat(3, min-content); }\\n  #user-card #user-info .metadata .login {\\n        font-family: Montserrat, sans-serif !important;\\n        font-size: 1.2rem;\\n        color: #1c2331; }\\n  #user-card #user-info .metadata .hireable {\\n        font-family: \\\"Valera Round\\\", sans-serif;\\n        font-size: .95rem;\\n        color: gray; }\\n  #user-card #user-info .metadata #user-icon-links {\\n        font-size: .7rem;\\n        margin-top: .3rem; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {IUser} from '../../shared/IUser';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss']\n})\nexport class UserCardComponent implements OnInit {\n\n  @Input() user: IUser;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid max-width-wrapper page-content\\\" >\\n  <app-header [headerText]=\\\"'Users'\\\"></app-header>\\n  <ul class=\\\"user-list\\\" *ngIf=\\\"users\\\">\\n    <li *ngFor=\\\"let user of users?.content\\\">\\n      <app-user-card [user]=\\\"user\\\"></app-user-card>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \".user-list li {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: (auto)[4];\\n      grid-template-columns: repeat(4, auto); }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../shared/user.service';\nimport {UserPage} from '../../shared/user-page';\nimport {SortOrder} from '../../shared/sort-order';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  protected users: UserPage;\n  private pageNum: number;\n  private order: SortOrder;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.order = SortOrder.DESC;\n    this.pageNum = 0;\n\n    this.fetchAll(this.pageNum, this.order);\n\n    if (this.users) {\n      this.pageNum = this.users.number;\n    }\n  }\n\n  fetchAll(page: number, order: SortOrder): void {\n    this.userService.fetchAll(page, order)\n      .subscribe(\n        data => this.users = data,\n        err => console.log(err)\n      );\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}